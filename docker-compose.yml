version: '3'

networks:
  default:
  reverse-proxy_traefik:
    external: true

services:
  reverse-proxy:
    image: nginx:stable-alpine
    networks:
      - default
      - reverse-proxy_traefik
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./:/var/www/html
      - ./docker/reverse-proxy/templates:/etc/nginx/templates
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      labels:
        expose-service-to-public-via: reverse-proxy_traefik

        traefik.enable: 'true'
        traefik.docker.network: reverse-proxy_traefik

        traefik.http.services.pixel-color_app.loadbalancer.server.port: 80

        traefik.http.routers.pixel-color_app.rule: Host(`pixel-color.docker-swarm.local`)
        traefik.http.routers.pixel-color_app.entrypoints: http
        traefik.http.routers.pixel-color_app.service: pixel-color_app

        traefik.http.routers.pixel-color_app_secure.rule: Host(`pixel-color.docker-swarm.local`)
        traefik.http.routers.pixel-color_app_secure.entrypoints: https
        traefik.http.routers.pixel-color_app_secure.service: pixel-color_app
        traefik.http.routers.pixel-color_app_secure.tls: 'true'

  app:
    image: pixel-color
    networks:
      - default
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./:/var/www/html
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker